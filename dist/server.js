!function(t,n){for(var e in n)t[e]=n[e]}(exports,function(t){function n(o){if(e[o])return e[o].exports;var r=e[o]={exports:{},id:o,loaded:!1};return t[o].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}var e={};return n.m=t,n.c=e,n.p="",n(0)}([function(t,n,e){"use strict";e(1),console.log("express has initialised"),e(4),console.log("socketio has initialised"),e(5),console.log("mongo has initialised")},function(t,n,e){"use strict";function o(t,n){d().then(l).then(p).then(function(t){return n.send(t)})}function r(t,n){var e=t.query;m(e).then(f).then(function(t){var e=t.isAutobot;console.log("got back isAutobot",e),n.setHeader("Content-Type","application/json"),n.send(JSON.stringify({isAutobot:e}))})}function s(t,n){var o=e(4),r=o.pushLatestEntryToUsers,s=t.query,i="added transformer "+s.name+" ("+(s.autobot?"autobot":"decepticon")+") to the database";u(s).then(r),n.send(i),console.log(i)}var i=e(7),a=i(),c=e(3),u=c.addTransformer,d=c.findAllTransformers,l=c.filterNameAndId,f=c.filterIsAutobot,m=c.findAllegianceAgainstId,p=e(6),g=process.cwd()+"/dist/public";a.use("/",i.static(g)),a.get("*",function(t,n){switch(console.log('got "('+t.path+')" request'),t.path){case"/":return o(t,n);case"/bin/is-autobot/":return r(t,n);case"/bin/modify/":return s(t,n);default:n.status(404).send("Not found")}}),t.exports=a},function(t,n,e){"use strict";var o=e(9),r=o.connection;o.Promise=global.Promise,o.connect("mongodb://mongodb:27017"),r.on("error",function(){return console.log("database (mongoose) connection error")}),r.once("open",function(){return console.log("database (mongoose) connected")}),t.exports={mongoose:o,database:r}},function(t,n,e){"use strict";function o(t){var n=new p(t);return n.save()}function r(){return p.find()}function s(){return p.findOne().sort("-updatedAt")}function i(t){var n=t._id;return p.findOne({_id:n})}function a(t){var n=t.isAutobot;return console.log("extractIsAutobot",n),{isAutobot:n}}function c(t){console.log("filterIsAutobot",t);var n=Array.isArray(t);switch(n){case!0:return t.map(a);default:return a(t)}}function u(t){var n=t._id,e=t.name;return{_id:n,name:e}}function d(t){var n=Array.isArray(t);switch(n){case!0:return t.map(u);default:return u(t)}}var l=e(2),f=l.mongoose,m=f.Schema({name:String,isAutobot:Boolean},{timestamps:!0}),p=f.model("Transformer",m);t.exports={addTransformer:o,findAllTransformers:r,findLastTransformerEntry:s,findAllegianceAgainstId:i,filterIsAutobot:c,filterNameAndId:d}},function(t,n,e){"use strict";function o(){u().then(function(t){var n=d(t);console.log("sending data to the client",n),i.emit("newTransformerEntry",n)})}var r=e(1),s=e(8).Server(r),i=e(10)(s),a=3e3,c=e(3),u=c.findLastTransformerEntry,d=c.filterNameAndId;s.listen(a,function(){return console.log("http server listening on port "+a)}),t.exports={pushLatestEntryToUsers:o}},function(t,n,e){"use strict";e(2)},function(t,n){"use strict";t.exports=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n="<!doctype html>",e='<html lang="en">\n\n\t\t\t<head>\n\n\t\t\t\t<meta charset="utf-8">\n\t\t\t\t<meta http-equiv="x-ua-compatible" content="ie=edge">\n\t\t\t\t<title>Transformers</title>\n\t\t\t\t<meta name="description" content="">\n\t\t\t\t<meta name="viewport" content="width=device-width, initial-scale=1">\n\n\t\t\t\t<link rel="stylesheet" href="/client.css">\n\n\t\t\t\t<script>\n\t\t\t\t\twindow.__REDUX_STATE__ = {\n\t\t\t\t\t\ttransformers: '+JSON.stringify(t)+'\n\t\t\t\t\t};\n\t\t\t\t</script>\n\n\t\t\t</head>\n\n\t\t\t<body>\n\n\t\t\t\t<div id="app"></div>\n\t\t\t\t<script src="/client.js"></script>\n\n\t\t\t</body>\n\n\t\t</html>';return n+"\n"+e}},function(t,n){t.exports=require("express")},function(t,n){t.exports=require("http")},function(t,n){t.exports=require("mongoose")},function(t,n){t.exports=require("socket.io")}]));
//# sourceMappingURL=server.js.map