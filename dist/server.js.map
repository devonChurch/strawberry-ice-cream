{"version":3,"sources":["webpack:///server.js","webpack:///webpack/bootstrap f3ffb81419f469fec8eb","webpack:///./server.js","webpack:///./express/initialise.js","webpack:///./mongo/mongoose.js","webpack:///./mongo/transformer.js","webpack:///./socketio/send.js","webpack:///./mongo/initialise.js","webpack:///./universal/html-boilerplate.js","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"mongoose\"","webpack:///external \"socket.io\""],"names":["e","a","i","exports","modules","__webpack_require__","moduleId","installedModules","module","id","loaded","call","m","c","p","console","log","requestApp","request","response","findAllTransformers","then","filterNameAndId","generateHtml","html","send","requestIsAutobot","query","findAllegianceAgainstId","filterIsAutobot","_ref","isAutobot","setHeader","JSON","stringify","requestModifiy","_require2","pushLatestEntryToUsers","message","name","autobot","addTransformer","express","app","_require","cwdStart","process","cwd","use","static","get","path","status","mongoose","database","connection","Promise","global","connect","on","once","data","transformer","Transformer","save","find","findLastTransformerEntry","findOne","sort","_ref2","_id","extractIsAutobot","_ref3","isArray","Array","map","extractNameAndId","_ref4","transformerSchema","Schema","String","Boolean","timestamps","model","filteredData","socket","emit","http","Server","port","listen","state","arguments","length","undefined","doctype","require"],"mappings":"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","file":"server.js","sourcesContent":["(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(1);\n\tconsole.log('express has initialised');\n\t\n\t__webpack_require__(4);\n\tconsole.log('socketio has initialised');\n\t\n\t__webpack_require__(5);\n\tconsole.log('mongo has initialised');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar express = __webpack_require__(7);\n\tvar app = express();\n\t\n\tvar _require = __webpack_require__(3),\n\t    addTransformer = _require.addTransformer,\n\t    findAllTransformers = _require.findAllTransformers,\n\t    filterNameAndId = _require.filterNameAndId,\n\t    filterIsAutobot = _require.filterIsAutobot,\n\t    findAllegianceAgainstId = _require.findAllegianceAgainstId;\n\t\n\tvar generateHtml = __webpack_require__(6);\n\t// const path = require('path');\n\t\n\t// app.use('/', express.static('/public'));\n\t// app.use('/static', express.static(__dirname + '/public'));\n\t// app.use(express.static('/public'));\n\t// console.log(path.join(__dirname, 'public'));\n\t// app.use(express.static(__dirname + '/public'));\n\t// app.use(express.static('/public'));\n\t// app.use(express.static('public'));\n\t// app.use(express.static(__dirname + '/public'));\n\t\n\t// const path = require('path');\n\t// app.use('/', express.static(path.join(__dirname, '/public')));\n\t// app.use('/public', express.static(path.join(__dirname, '/public')));\n\t// app.use(express.static(path.join(__dirname, '/public')));\n\t// app.use(express.static(path.join(__dirname, 'public')));\n\t// app.use(express.static(path.resolve(__dirname, 'public')));\n\t// app.use('/public', express.static(path.join(__dirname, '/public')));\n\t//\n\tvar cwdStart = process.cwd() + '/dist/public';\n\tapp.use('/', express.static(cwdStart));\n\t\n\t// console.log(path.join(__dirname, 'public'));\n\t\n\t// const fs = require('fs');\n\t// const kitten = fs.readFileSync(path.join(__dirname, '/public/kitten.jpg'));\n\t// console.log('kitten', kitten);\n\t// const kittenPath = path.join(__dirname, '/public');\n\t\n\t// console.log(`path.join(__dirname, '/public'`, path.join(__dirname, '/public'));\n\t// console.log(`path.resolve(__dirname, '/public'`, path.resolve(__dirname, '/public'));\n\t// console.log('__filename', __filename);\n\t// console.log('__dirname', __dirname);\n\t// console.log('process.cwd()', process.cwd());\n\t// console.log('cwdStart', cwdStart);\n\t//\n\t// const kittenPath = cwdStart; // path.join(__dirname, '/');\n\t// fs.readdir(kittenPath, (err, files) => {\n\t//   files.forEach(file => {\n\t//     console.log(file);\n\t//   });\n\t// })\n\t\n\tfunction requestApp(request, response) {\n\t\n\t\tfindAllTransformers().then(filterNameAndId).then(generateHtml).then(function (html) {\n\t\t\treturn response.send(html);\n\t\t});\n\t\n\t\t// response.send('hello');\n\t}\n\t\n\tfunction requestIsAutobot(request, response) {\n\t\tvar query = request.query;\n\t\n\t\tfindAllegianceAgainstId(query).then(filterIsAutobot).then(function (_ref) {\n\t\t\tvar isAutobot = _ref.isAutobot;\n\t\n\t\n\t\t\tconsole.log('got back isAutobot', isAutobot);\n\t\t\tresponse.setHeader('Content-Type', 'application/json');\n\t\t\tresponse.send(JSON.stringify({ isAutobot: isAutobot }));\n\t\t});\n\t}\n\t\n\tfunction requestModifiy(request, response) {\n\t\tvar _require2 = __webpack_require__(4),\n\t\t    pushLatestEntryToUsers = _require2.pushLatestEntryToUsers;\n\t\n\t\tvar query = request.query;\n\t\n\t\tvar message = 'added transformer ' + query.name + ' (' + (query.autobot ? 'autobot' : 'decepticon') + ') to the database';\n\t\n\t\taddTransformer(query).then(pushLatestEntryToUsers);\n\t\n\t\tresponse.send(message);\n\t\tconsole.log(message);\n\t\n\t\t// http://localhost:3000/bin/modify/?name=Optimus Prime&isAutobot=true\n\t\t// http://localhost:3000/bin/modify/?name=Megatron&isAutobot=false\n\t\t// http://localhost:3000/bin/modify/?name=Bumblebee&isAutobot=true\n\t\t// http://localhost:3000/bin/modify/?name=Starscream&isAutobot=false\n\t\t// http://localhost:3000/bin/modify/?name=Ironhide&isAutobot=true\n\t\t// http://localhost:3000/bin/modify/?name=Soundwave&isAutobot=false\n\t\t// http://localhost:3000/bin/modify/?name=Ratchet&isAutobot=true\n\t}\n\t\n\tapp.get('*', function (request, response) {\n\t\n\t\tconsole.log('got \"(' + request.path + ')\" request');\n\t\n\t\tswitch (request.path) {\n\t\n\t\t\tcase '/':\n\t\t\t\treturn requestApp(request, response);\n\t\n\t\t\tcase '/bin/is-autobot/':\n\t\t\t\t// curl -i http://localhost:3000/bin/is-autobot/?_id=1234567890\n\t\t\t\treturn requestIsAutobot(request, response);\n\t\n\t\t\tcase '/bin/modify/':\n\t\t\t\t// curl -i http://localhost:3000/bin/modify/?name=starscream&isAutobot=false\n\t\t\t\treturn requestModifiy(request, response);\n\t\n\t\t\tdefault:\n\t\t\t\tresponse.status(404).send('Not found');\n\t\n\t\t}\n\t});\n\t\n\t// app.listen(3000);\n\t\n\tmodule.exports = app;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar mongoose = __webpack_require__(9);\n\tvar database = mongoose.connection;\n\t\n\tmongoose.Promise = global.Promise; // Use native ES6 promises NOT the built in out of date pollyfll.\n\t// mongoose.connect('mongodb://127.0.0.1:27017/database');\n\t// mongoose.connect('mongodb://127.0.0.1:27017');\n\t// mongoose.connect('mongodb://127.0.0.1:27017/db');\n\tmongoose.connect('mongodb://mongodb:27017');\n\t// mongoose.connect('mongodb://127.0.0.1:27017');\n\t//\n\t// mongoose.connect('mongodb://mongo:27017');\n\t\n\t\n\t// 172.18.0.1:42942\n\t// mongoose.connect('mongodb://172.18.0.1:27017/database');\n\t// mongoose.connect('mongodb://172.17.0.2:27017/database');\n\t// mongoose.connect('mongodb://db_1:27017/database');\n\t// mongoose.connect('mongodb://mongo:27017/database');\n\t// mongoose.connect('mongodb://mongo:27017'); // 'mongodb://db_1:27017/test' //  'mongodb://localhost/test'\n\t\n\tdatabase.on('error', function () {\n\t\treturn console.log('database (mongoose) connection error');\n\t});\n\tdatabase.once('open', function () {\n\t\treturn console.log('database (mongoose) connected');\n\t});\n\t\n\tmodule.exports = {\n\t\tmongoose: mongoose,\n\t\tdatabase: database\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _require = __webpack_require__(2),\n\t    mongoose = _require.mongoose;\n\t\n\tvar transformerSchema = mongoose.Schema({\n\t\tname: String,\n\t\tisAutobot: Boolean\n\t}, {\n\t\ttimestamps: true\n\t});\n\tvar Transformer = mongoose.model('Transformer', transformerSchema);\n\t\n\tfunction addTransformer(data) {\n\t\n\t\t// if (!verifyTransformerData()) return console.log('transformer data is incorrect');\n\t\n\t\tvar transformer = new Transformer(data);\n\t\n\t\treturn transformer.save();\n\t}\n\t\n\tfunction verifyTransformerData(_ref) {\n\t\tvar name = _ref.name,\n\t\t    isAutobot = _ref.isAutobot;\n\t}\n\t\n\tfunction findAllTransformers() {\n\t\n\t\treturn Transformer.find();\n\t}\n\t\n\tfunction findLastTransformerEntry() {\n\t\n\t\treturn Transformer.findOne().sort('-updatedAt');\n\t}\n\t\n\tfunction findAllegianceAgainstId(_ref2) {\n\t\tvar _id = _ref2._id;\n\t\n\t\n\t\treturn Transformer.findOne({ _id: _id });\n\t}\n\t\n\tfunction extractIsAutobot(_ref3) {\n\t\tvar isAutobot = _ref3.isAutobot;\n\t\n\t\n\t\tconsole.log('extractIsAutobot', isAutobot);\n\t\n\t\treturn { isAutobot: isAutobot };\n\t}\n\t\n\tfunction filterIsAutobot(data) {\n\t\n\t\tconsole.log('filterIsAutobot', data);\n\t\n\t\t// {\"_id\":\"5853ba93b2fcae9d8e0d7ada\",\"name\":\"banana\",\"isAutobot\":true,\"__v\":0}\n\t\n\t\tvar isArray = Array.isArray(data);\n\t\n\t\tswitch (isArray) {\n\t\n\t\t\tcase true:\n\t\t\t\treturn data.map(extractIsAutobot);\n\t\n\t\t\tdefault:\n\t\t\t\treturn extractIsAutobot(data);\n\t\n\t\t}\n\t}\n\t\n\tfunction extractNameAndId(_ref4) {\n\t\tvar _id = _ref4._id,\n\t\t    name = _ref4.name;\n\t\n\t\n\t\treturn { _id: _id, name: name };\n\t}\n\t\n\tfunction filterNameAndId(data) {\n\t\n\t\t// {\"_id\":\"5853ba93b2fcae9d8e0d7ada\",\"name\":\"banana\",\"isAutobot\":true,\"__v\":0}\n\t\n\t\tvar isArray = Array.isArray(data);\n\t\n\t\tswitch (isArray) {\n\t\n\t\t\tcase true:\n\t\t\t\treturn data.map(extractNameAndId);\n\t\n\t\t\tdefault:\n\t\t\t\treturn extractNameAndId(data);\n\t\n\t\t}\n\t}\n\t\n\tmodule.exports = {\n\t\taddTransformer: addTransformer,\n\t\tfindAllTransformers: findAllTransformers,\n\t\tfindLastTransformerEntry: findLastTransformerEntry,\n\t\tfindAllegianceAgainstId: findAllegianceAgainstId,\n\t\tfilterIsAutobot: filterIsAutobot,\n\t\tfilterNameAndId: filterNameAndId\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar express = __webpack_require__(1);\n\tvar http = __webpack_require__(8).Server(express);\n\tvar socket = __webpack_require__(10)(http);\n\tvar port = 3000;\n\t\n\tvar _require = __webpack_require__(3),\n\t    findLastTransformerEntry = _require.findLastTransformerEntry,\n\t    filterNameAndId = _require.filterNameAndId;\n\t\n\thttp.listen(port, function () {\n\t\treturn console.log('http server listening on port ' + port);\n\t});\n\t\n\tfunction pushLatestEntryToUsers() {\n\t\n\t\tfindLastTransformerEntry().then(function (data) {\n\t\n\t\t\tvar filteredData = filterNameAndId(data);\n\t\t\tconsole.log('sending data to the client', filteredData);\n\t\t\tsocket.emit('newTransformerEntry', filteredData);\n\t\t});\n\t}\n\t\n\tmodule.exports = {\n\t\tpushLatestEntryToUsers: pushLatestEntryToUsers\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(2);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\tvar state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t\n\t\tvar doctype = '<!doctype html>';\n\t\tvar html = '<html lang=\"en\">\\n\\n\\t\\t\\t<head>\\n\\n\\t\\t\\t\\t<meta charset=\"utf-8\">\\n\\t\\t\\t\\t<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\\n\\t\\t\\t\\t<title>Transformers</title>\\n\\t\\t\\t\\t<meta name=\"description\" content=\"\">\\n\\t\\t\\t\\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\n\\t\\t\\t\\t<link rel=\"stylesheet\" href=\"/client.css\">\\n\\n\\t\\t\\t\\t<script>\\n\\t\\t\\t\\t\\twindow.__REDUX_STATE__ = {\\n\\t\\t\\t\\t\\t\\ttransformers: ' + JSON.stringify(state) + '\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t</script>\\n\\n\\t\\t\\t</head>\\n\\n\\t\\t\\t<body>\\n\\n\\t\\t\\t\\t<div id=\"app\"></div>\\n\\t\\t\\t\\t<script src=\"/client.js\"></script>\\n\\n\\t\\t\\t</body>\\n\\n\\t\\t</html>';\n\t\n\t\t// Forcing the doctype to butt right up as the first character on the first\n\t\t// line to avoid a syntax error on the client.\n\t\treturn doctype + '\\n' + html;\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"express\");\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"http\");\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"mongoose\");\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"socket.io\");\n\n/***/ }\n/******/ ])));\n\n\n// WEBPACK FOOTER //\n// server.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f3ffb81419f469fec8eb","require('./express/initialise');\nconsole.log('express has initialised');\n\nrequire('./socketio/send');\nconsole.log('socketio has initialised');\n\nrequire('./mongo/initialise');\nconsole.log('mongo has initialised');\n\n\n\n// WEBPACK FOOTER //\n// ./server.js","const express = require('express');\nconst app = express();\nconst {addTransformer, findAllTransformers, filterNameAndId, filterIsAutobot, findAllegianceAgainstId} = require('../mongo/transformer');\nconst generateHtml = require('../universal/html-boilerplate');\n// const path = require('path');\n\n// app.use('/', express.static('/public'));\n// app.use('/static', express.static(__dirname + '/public'));\n// app.use(express.static('/public'));\n// console.log(path.join(__dirname, 'public'));\n// app.use(express.static(__dirname + '/public'));\n// app.use(express.static('/public'));\n// app.use(express.static('public'));\n// app.use(express.static(__dirname + '/public'));\n\n// const path = require('path');\n// app.use('/', express.static(path.join(__dirname, '/public')));\n// app.use('/public', express.static(path.join(__dirname, '/public')));\n// app.use(express.static(path.join(__dirname, '/public')));\n// app.use(express.static(path.join(__dirname, 'public')));\n// app.use(express.static(path.resolve(__dirname, 'public')));\n// app.use('/public', express.static(path.join(__dirname, '/public')));\n//\nconst cwdStart = `${process.cwd()}/dist/public`;\napp.use('/', express.static(cwdStart));\n\n// console.log(path.join(__dirname, 'public'));\n\n// const fs = require('fs');\n// const kitten = fs.readFileSync(path.join(__dirname, '/public/kitten.jpg'));\n// console.log('kitten', kitten);\n// const kittenPath = path.join(__dirname, '/public');\n\n// console.log(`path.join(__dirname, '/public'`, path.join(__dirname, '/public'));\n// console.log(`path.resolve(__dirname, '/public'`, path.resolve(__dirname, '/public'));\n// console.log('__filename', __filename);\n// console.log('__dirname', __dirname);\n// console.log('process.cwd()', process.cwd());\n// console.log('cwdStart', cwdStart);\n//\n// const kittenPath = cwdStart; // path.join(__dirname, '/');\n// fs.readdir(kittenPath, (err, files) => {\n//   files.forEach(file => {\n//     console.log(file);\n//   });\n// })\n\nfunction requestApp(request, response) {\n\n\tfindAllTransformers()\n\t\t.then(filterNameAndId)\n\t\t.then(generateHtml)\n\t\t.then((html) => response.send(html));\n\n\t// response.send('hello');\n\n}\n\nfunction requestIsAutobot(request, response) {\n\n\tconst {query} = request;\n\tfindAllegianceAgainstId(query)\n\t\t.then(filterIsAutobot)\n\t\t.then(({isAutobot}) => {\n\n\t\t\tconsole.log('got back isAutobot', isAutobot);\n\t\t\tresponse.setHeader('Content-Type', 'application/json');\n\t\t\tresponse.send(JSON.stringify({isAutobot}));\n\n\t\t});\n\n}\n\nfunction requestModifiy(request, response) {\n\n\tconst {pushLatestEntryToUsers} = require('../socketio/send');\n\tconst {query} = request;\n\tconst message = `added transformer ${query.name} (${query.autobot ? 'autobot' : 'decepticon'}) to the database`;\n\n\taddTransformer(query)\n\t\t.then(pushLatestEntryToUsers);\n\n\tresponse.send(message);\n\tconsole.log(message);\n\n\t// http://localhost:3000/bin/modify/?name=Optimus Prime&isAutobot=true\n\t// http://localhost:3000/bin/modify/?name=Megatron&isAutobot=false\n\t// http://localhost:3000/bin/modify/?name=Bumblebee&isAutobot=true\n\t// http://localhost:3000/bin/modify/?name=Starscream&isAutobot=false\n\t// http://localhost:3000/bin/modify/?name=Ironhide&isAutobot=true\n\t// http://localhost:3000/bin/modify/?name=Soundwave&isAutobot=false\n\t// http://localhost:3000/bin/modify/?name=Ratchet&isAutobot=true\n\n}\n\napp.get('*', (request, response) => {\n\n\tconsole.log(`got \"(${request.path})\" request`);\n\n\tswitch (request.path) {\n\n\t\tcase '/':\n\t\t\treturn requestApp(request, response);\n\n\t\tcase '/bin/is-autobot/':\n\t\t\t// curl -i http://localhost:3000/bin/is-autobot/?_id=1234567890\n\t\t\treturn requestIsAutobot(request, response);\n\n\t\tcase '/bin/modify/':\n\t\t\t// curl -i http://localhost:3000/bin/modify/?name=starscream&isAutobot=false\n\t\t\treturn requestModifiy(request, response);\n\n\t\tdefault:\n\t\t\tresponse.status(404).send('Not found');\n\n\t}\n\n});\n\n// app.listen(3000);\n\nmodule.exports = app;\n\n\n\n// WEBPACK FOOTER //\n// ./express/initialise.js","const mongoose = require('mongoose');\nconst database = mongoose.connection;\n\nmongoose.Promise = global.Promise; // Use native ES6 promises NOT the built in out of date pollyfll.\n// mongoose.connect('mongodb://127.0.0.1:27017/database');\n// mongoose.connect('mongodb://127.0.0.1:27017');\n// mongoose.connect('mongodb://127.0.0.1:27017/db');\nmongoose.connect('mongodb://mongodb:27017');\n// mongoose.connect('mongodb://127.0.0.1:27017');\n//\n// mongoose.connect('mongodb://mongo:27017');\n\n\n\n\n// 172.18.0.1:42942\n// mongoose.connect('mongodb://172.18.0.1:27017/database');\n// mongoose.connect('mongodb://172.17.0.2:27017/database');\n// mongoose.connect('mongodb://db_1:27017/database');\n// mongoose.connect('mongodb://mongo:27017/database');\n// mongoose.connect('mongodb://mongo:27017'); // 'mongodb://db_1:27017/test' //  'mongodb://localhost/test'\n\ndatabase.on('error', () => console.log('database (mongoose) connection error'));\ndatabase.once('open', () => console.log('database (mongoose) connected'));\n\nmodule.exports = {\n\tmongoose,\n\tdatabase\n};\n\n\n\n// WEBPACK FOOTER //\n// ./mongo/mongoose.js","const {mongoose} = require('./mongoose');\nconst transformerSchema = mongoose.Schema(\n\t{\n\t\tname: String,\n\t\tisAutobot: Boolean,\n\t},\n\t{\n\t\ttimestamps: true\n\t}\n);\nconst Transformer = mongoose.model('Transformer', transformerSchema);\n\nfunction addTransformer(data) {\n\n\t// if (!verifyTransformerData()) return console.log('transformer data is incorrect');\n\n\tconst transformer = new Transformer(data);\n\n\treturn transformer.save();\n\n}\n\nfunction verifyTransformerData({name, isAutobot}) {\n\n\n}\n\nfunction findAllTransformers() {\n\n\treturn Transformer.find();\n\n}\n\nfunction findLastTransformerEntry() {\n\n\treturn Transformer.findOne().sort('-updatedAt');\n\n}\n\nfunction findAllegianceAgainstId({_id}) {\n\n\treturn Transformer.findOne({_id});\n\n}\n\nfunction extractIsAutobot({isAutobot}) {\n\n\tconsole.log('extractIsAutobot', isAutobot);\n\n\treturn {isAutobot};\n\n}\n\nfunction filterIsAutobot(data) {\n\n\tconsole.log('filterIsAutobot', data);\n\n\t// {\"_id\":\"5853ba93b2fcae9d8e0d7ada\",\"name\":\"banana\",\"isAutobot\":true,\"__v\":0}\n\n\tconst isArray = Array.isArray(data);\n\n\tswitch (isArray) {\n\n\t\tcase true:\n\t\t\treturn data.map(extractIsAutobot);\n\n\t\tdefault:\n\t\t\treturn extractIsAutobot(data);\n\n\t}\n\n}\n\nfunction extractNameAndId({_id, name}) {\n\n\treturn {_id, name};\n\n}\n\nfunction filterNameAndId(data) {\n\n\t// {\"_id\":\"5853ba93b2fcae9d8e0d7ada\",\"name\":\"banana\",\"isAutobot\":true,\"__v\":0}\n\n\tconst isArray = Array.isArray(data);\n\n\tswitch (isArray) {\n\n\t\tcase true:\n\t\t\treturn data.map(extractNameAndId);\n\n\t\tdefault:\n\t\t\treturn extractNameAndId(data);\n\n\t}\n\n}\n\nmodule.exports = {\n\taddTransformer,\n\tfindAllTransformers,\n\tfindLastTransformerEntry,\n\tfindAllegianceAgainstId,\n\tfilterIsAutobot,\n\tfilterNameAndId\n};\n\n\n\n// WEBPACK FOOTER //\n// ./mongo/transformer.js","const express = require('../express/initialise');\nconst http = require('http').Server(express);\nconst socket = require('socket.io')(http);\nconst port = 3000;\nconst {findLastTransformerEntry, filterNameAndId} = require('../mongo/transformer');\n\nhttp.listen(port, () => console.log(`http server listening on port ${port}`));\n\nfunction pushLatestEntryToUsers() {\n\n\tfindLastTransformerEntry()\n\t\t.then((data) => {\n\n\t\t\tconst filteredData = filterNameAndId(data);\n\t\t\tconsole.log('sending data to the client', filteredData);\n\t\t\tsocket.emit('newTransformerEntry', filteredData);\n\n\t\t});\n\n}\n\nmodule.exports = {\n\tpushLatestEntryToUsers\n};\n\n\n\n// WEBPACK FOOTER //\n// ./socketio/send.js","require('./mongoose');\n\n\n\n// WEBPACK FOOTER //\n// ./mongo/initialise.js","module.exports = (state = []) => {\n\n\tconst doctype = '<!doctype html>';\n\tconst html = (\n\t\t`<html lang=\"en\">\n\n\t\t\t<head>\n\n\t\t\t\t<meta charset=\"utf-8\">\n\t\t\t\t<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n\t\t\t\t<title>Transformers</title>\n\t\t\t\t<meta name=\"description\" content=\"\">\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n\t\t\t\t<link rel=\"stylesheet\" href=\"/client.css\">\n\n\t\t\t\t<script>\n\t\t\t\t\twindow.__REDUX_STATE__ = {\n\t\t\t\t\t\ttransformers: ${JSON.stringify(state)}\n\t\t\t\t\t};\n\t\t\t\t</script>\n\n\t\t\t</head>\n\n\t\t\t<body>\n\n\t\t\t\t<div id=\"app\"></div>\n\t\t\t\t<script src=\"/client.js\"></script>\n\n\t\t\t</body>\n\n\t\t</html>`\n\t);\n\n\t// Forcing the doctype to butt right up as the first character on the first\n\t// line to avoid a syntax error on the client.\n\treturn (`${doctype}\\n${html}`);\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./universal/html-boilerplate.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}