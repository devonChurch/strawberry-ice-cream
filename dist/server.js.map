{"version":3,"sources":["webpack:///webpack/bootstrap 50b93a99501062c9f87e","webpack:///./server.js","webpack:///./express/initialise.js","webpack:///external \"express\"","webpack:///./mongo/transformer.js","webpack:///./mongo/mongoose.js","webpack:///external \"mongoose\"","webpack:///./universal/html-boilerplate.js","webpack:///./socketio/send.js","webpack:///external \"http\"","webpack:///external \"socket.io\"","webpack:///./mongo/initialise.js"],"names":["require","console","log","express","app","addTransformer","findAllTransformers","filterNameAndId","filterIsAutobot","findAllegianceAgainstId","generateHtml","cwdStart","process","cwd","use","static","requestApp","request","response","then","html","send","requestIsAutobot","query","isAutobot","setHeader","JSON","stringify","requestModifiy","pushLatestEntryToUsers","message","name","autobot","get","path","status","module","exports","mongoose","transformerSchema","Schema","String","Boolean","timestamps","Transformer","model","data","transformer","save","verifyTransformerData","find","findLastTransformerEntry","findOne","sort","_id","extractIsAutobot","isArray","Array","map","extractNameAndId","database","connection","Promise","global","connect","on","once","state","doctype","http","Server","socket","port","listen","filteredData","emit"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50b93a99501062c9f87e","require('./express/initialise');\nconsole.log('express has initialised');\n\nrequire('./socketio/send');\nconsole.log('socketio has initialised');\n\nrequire('./mongo/initialise');\nconsole.log('mongo has initialised');\n\n\n\n// WEBPACK FOOTER //\n// ./server.js","const express = require('express');\nconst app = express();\nconst {addTransformer, findAllTransformers, filterNameAndId, filterIsAutobot, findAllegianceAgainstId} = require('../mongo/transformer');\nconst generateHtml = require('../universal/html-boilerplate');\n// const path = require('path');\n\n// app.use('/', express.static('/public'));\n// app.use('/static', express.static(__dirname + '/public'));\n// app.use(express.static('/public'));\n// console.log(path.join(__dirname, 'public'));\n// app.use(express.static(__dirname + '/public'));\n// app.use(express.static('/public'));\n// app.use(express.static('public'));\n// app.use(express.static(__dirname + '/public'));\n\n// const path = require('path');\n// app.use('/', express.static(path.join(__dirname, '/public')));\n// app.use('/public', express.static(path.join(__dirname, '/public')));\n// app.use(express.static(path.join(__dirname, '/public')));\n// app.use(express.static(path.join(__dirname, 'public')));\n// app.use(express.static(path.resolve(__dirname, 'public')));\n// app.use('/public', express.static(path.join(__dirname, '/public')));\n//\nconst cwdStart = `${process.cwd()}/dist/public`;\napp.use('/', express.static(cwdStart));\n\n// console.log(path.join(__dirname, 'public'));\n\n// const fs = require('fs');\n// const kitten = fs.readFileSync(path.join(__dirname, '/public/kitten.jpg'));\n// console.log('kitten', kitten);\n// const kittenPath = path.join(__dirname, '/public');\n\n// console.log(`path.join(__dirname, '/public'`, path.join(__dirname, '/public'));\n// console.log(`path.resolve(__dirname, '/public'`, path.resolve(__dirname, '/public'));\n// console.log('__filename', __filename);\n// console.log('__dirname', __dirname);\n// console.log('process.cwd()', process.cwd());\n// console.log('cwdStart', cwdStart);\n//\n// const kittenPath = cwdStart; // path.join(__dirname, '/');\n// fs.readdir(kittenPath, (err, files) => {\n//   files.forEach(file => {\n//     console.log(file);\n//   });\n// })\n\nfunction requestApp(request, response) {\n\n\tfindAllTransformers()\n\t\t.then(filterNameAndId)\n\t\t.then(generateHtml)\n\t\t.then((html) => response.send(html));\n\n\t// response.send('hello');\n\n}\n\nfunction requestIsAutobot(request, response) {\n\n\tconst {query} = request;\n\tfindAllegianceAgainstId(query)\n\t\t.then(filterIsAutobot)\n\t\t.then(({isAutobot}) => {\n\n\t\t\tconsole.log('got back isAutobot', isAutobot);\n\t\t\tresponse.setHeader('Content-Type', 'application/json');\n\t\t\tresponse.send(JSON.stringify({isAutobot}));\n\n\t\t});\n\n}\n\nfunction requestModifiy(request, response) {\n\n\tconst {pushLatestEntryToUsers} = require('../socketio/send');\n\tconst {query} = request;\n\tconst message = `added transformer ${query.name} (${query.autobot ? 'autobot' : 'decepticon'}) to the database`;\n\n\taddTransformer(query)\n\t\t.then(pushLatestEntryToUsers);\n\n\tresponse.send(message);\n\tconsole.log(message);\n\n\t// http://localhost:3000/bin/modify/?name=Optimus Prime&isAutobot=true\n\t// http://localhost:3000/bin/modify/?name=Megatron&isAutobot=false\n\t// http://localhost:3000/bin/modify/?name=Bumblebee&isAutobot=true\n\t// http://localhost:3000/bin/modify/?name=Starscream&isAutobot=false\n\t// http://localhost:3000/bin/modify/?name=Ironhide&isAutobot=true\n\t// http://localhost:3000/bin/modify/?name=Soundwave&isAutobot=false\n\t// http://localhost:3000/bin/modify/?name=Ratchet&isAutobot=true\n\n}\n\napp.get('*', (request, response) => {\n\n\tconsole.log(`got \"(${request.path})\" request`);\n\n\tswitch (request.path) {\n\n\t\tcase '/':\n\t\t\treturn requestApp(request, response);\n\n\t\tcase '/bin/is-autobot/':\n\t\t\t// curl -i http://localhost:3000/bin/is-autobot/?_id=1234567890\n\t\t\treturn requestIsAutobot(request, response);\n\n\t\tcase '/bin/modify/':\n\t\t\t// curl -i http://localhost:3000/bin/modify/?name=starscream&isAutobot=false\n\t\t\treturn requestModifiy(request, response);\n\n\t\tdefault:\n\t\t\tresponse.status(404).send('Not found');\n\n\t}\n\n});\n\n// app.listen(3000);\n\nmodule.exports = app;\n\n\n\n// WEBPACK FOOTER //\n// ./express/initialise.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","const {mongoose} = require('./mongoose');\nconst transformerSchema = mongoose.Schema(\n\t{\n\t\tname: String,\n\t\tisAutobot: Boolean,\n\t},\n\t{\n\t\ttimestamps: true\n\t}\n);\nconst Transformer = mongoose.model('Transformer', transformerSchema);\n\nfunction addTransformer(data) {\n\n\t// if (!verifyTransformerData()) return console.log('transformer data is incorrect');\n\n\tconst transformer = new Transformer(data);\n\n\treturn transformer.save();\n\n}\n\nfunction verifyTransformerData({name, isAutobot}) {\n\n\n}\n\nfunction findAllTransformers() {\n\n\treturn Transformer.find();\n\n}\n\nfunction findLastTransformerEntry() {\n\n\treturn Transformer.findOne().sort('-updatedAt');\n\n}\n\nfunction findAllegianceAgainstId({_id}) {\n\n\treturn Transformer.findOne({_id});\n\n}\n\nfunction extractIsAutobot({isAutobot}) {\n\n\tconsole.log('extractIsAutobot', isAutobot);\n\n\treturn {isAutobot};\n\n}\n\nfunction filterIsAutobot(data) {\n\n\tconsole.log('filterIsAutobot', data);\n\n\t// {\"_id\":\"5853ba93b2fcae9d8e0d7ada\",\"name\":\"banana\",\"isAutobot\":true,\"__v\":0}\n\n\tconst isArray = Array.isArray(data);\n\n\tswitch (isArray) {\n\n\t\tcase true:\n\t\t\treturn data.map(extractIsAutobot);\n\n\t\tdefault:\n\t\t\treturn extractIsAutobot(data);\n\n\t}\n\n}\n\nfunction extractNameAndId({_id, name}) {\n\n\treturn {_id, name};\n\n}\n\nfunction filterNameAndId(data) {\n\n\t// {\"_id\":\"5853ba93b2fcae9d8e0d7ada\",\"name\":\"banana\",\"isAutobot\":true,\"__v\":0}\n\n\tconst isArray = Array.isArray(data);\n\n\tswitch (isArray) {\n\n\t\tcase true:\n\t\t\treturn data.map(extractNameAndId);\n\n\t\tdefault:\n\t\t\treturn extractNameAndId(data);\n\n\t}\n\n}\n\nmodule.exports = {\n\taddTransformer,\n\tfindAllTransformers,\n\tfindLastTransformerEntry,\n\tfindAllegianceAgainstId,\n\tfilterIsAutobot,\n\tfilterNameAndId\n};\n\n\n\n// WEBPACK FOOTER //\n// ./mongo/transformer.js","const mongoose = require('mongoose');\nconst database = mongoose.connection;\n\nmongoose.Promise = global.Promise; // Use native ES6 promises NOT the built in out of date pollyfll.\n// mongoose.connect('mongodb://127.0.0.1:27017/database');\n// mongoose.connect('mongodb://127.0.0.1:27017');\n// mongoose.connect('mongodb://127.0.0.1:27017/db');\nmongoose.connect('mongodb://mongodb:27017');\n// mongoose.connect('mongodb://127.0.0.1:27017');\n//\n// mongoose.connect('mongodb://mongo:27017');\n\n\n\n\n// 172.18.0.1:42942\n// mongoose.connect('mongodb://172.18.0.1:27017/database');\n// mongoose.connect('mongodb://172.17.0.2:27017/database');\n// mongoose.connect('mongodb://db_1:27017/database');\n// mongoose.connect('mongodb://mongo:27017/database');\n// mongoose.connect('mongodb://mongo:27017'); // 'mongodb://db_1:27017/test' //  'mongodb://localhost/test'\n\ndatabase.on('error', () => console.log('database (mongoose) connection error'));\ndatabase.once('open', () => console.log('database (mongoose) connected'));\n\nmodule.exports = {\n\tmongoose,\n\tdatabase\n};\n\n\n\n// WEBPACK FOOTER //\n// ./mongo/mongoose.js","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 5\n// module chunks = 0","module.exports = (state = []) => {\n\n\tconst doctype = '<!doctype html>';\n\tconst html = (\n\t\t`<html lang=\"en\">\n\n\t\t\t<head>\n\n\t\t\t\t<meta charset=\"utf-8\">\n\t\t\t\t<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n\t\t\t\t<title>Transformers</title>\n\t\t\t\t<meta name=\"description\" content=\"\">\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n\t\t\t\t<link rel=\"stylesheet\" href=\"/client.css\">\n\n\t\t\t\t<script>\n\t\t\t\t\twindow.__REDUX_STATE__ = {\n\t\t\t\t\t\ttransformers: ${JSON.stringify(state)}\n\t\t\t\t\t};\n\t\t\t\t</script>\n\n\t\t\t</head>\n\n\t\t\t<body>\n\n\t\t\t\t<div id=\"app\"></div>\n\t\t\t\t<script src=\"/client.js\"></script>\n\n\t\t\t</body>\n\n\t\t</html>`\n\t);\n\n\t// Forcing the doctype to butt right up as the first character on the first\n\t// line to avoid a syntax error on the client.\n\treturn (`${doctype}\\n${html}`);\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./universal/html-boilerplate.js","const express = require('../express/initialise');\nconst http = require('http').Server(express);\nconst socket = require('socket.io')(http);\nconst port = 3000;\nconst {findLastTransformerEntry, filterNameAndId} = require('../mongo/transformer');\n\nhttp.listen(port, () => console.log(`http server listening on port ${port}`));\n\nfunction pushLatestEntryToUsers() {\n\n\tfindLastTransformerEntry()\n\t\t.then((data) => {\n\n\t\t\tconst filteredData = filterNameAndId(data);\n\t\t\tconsole.log('sending data to the client', filteredData);\n\t\t\tsocket.emit('newTransformerEntry', filteredData);\n\n\t\t});\n\n}\n\nmodule.exports = {\n\tpushLatestEntryToUsers\n};\n\n\n\n// WEBPACK FOOTER //\n// ./socketio/send.js","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 9\n// module chunks = 0","require('./mongoose');\n\n\n\n// WEBPACK FOOTER //\n// ./mongo/initialise.js"],"sourceRoot":""}