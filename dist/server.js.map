{"version":3,"sources":["webpack:///webpack/bootstrap 80a9eedc19439a8fe5b1","webpack:///./server.js","webpack:///./express/initialise.js","webpack:///external \"express\"","webpack:///./mongo/transformer.js","webpack:///./mongo/mongoose.js","webpack:///external \"mongoose\"","webpack:///./universal/html-boilerplate.js","webpack:///./socketio/send.js","webpack:///external \"http\"","webpack:///external \"socket.io\"","webpack:///./mongo/initialise.js"],"names":["require","console","log","express","app","checkTransformerRelevance","checkTransformerExistence","addTransformer","findAllTransformers","filterNameAndId","filterIsAutobot","findAllegianceAgainstId","generateHtml","cwdStart","process","cwd","use","static","requestApp","request","response","then","html","send","requestIsAutobot","query","isAutobot","setHeader","JSON","stringify","sendModificationStatus","status","requestModifiy","pushLatestEntryToUsers","name","autobot","catch","error","get","path","module","exports","mongoose","transformerSchema","Schema","String","Boolean","timestamps","Transformer","model","Promise","resolve","reject","data","transformer","save","findOne","find","findLastTransformerEntry","sort","_id","extractIsAutobot","isArray","Array","map","extractNameAndId","database","connection","global","connect","on","once","state","doctype","http","Server","socket","port","listen","filteredData","emit"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 80a9eedc19439a8fe5b1","require('./express/initialise');\nconsole.log('express has initialised');\n\nrequire('./socketio/send');\nconsole.log('socketio has initialised');\n\nrequire('./mongo/initialise');\nconsole.log('mongo has initialised');\n\n\n\n// WEBPACK FOOTER //\n// ./server.js","const express = require('express');\nconst app = express();\nconst {checkTransformerRelevance, checkTransformerExistence, addTransformer, findAllTransformers, filterNameAndId, filterIsAutobot, findAllegianceAgainstId} = require('../mongo/transformer');\nconst generateHtml = require('../universal/html-boilerplate');\n\n\n// Must be called from the NPM script to lock the cwd as the root app directory.\nconst cwdStart = `${process.cwd()}/dist/public`;\napp.use('/', express.static(cwdStart));\n\nfunction requestApp(request, response) {\n\n\tfindAllTransformers()\n\t\t.then(filterNameAndId)\n\t\t.then(generateHtml)\n\t\t.then((html) => response.send(html));\n\n}\n\nfunction requestIsAutobot(request, response) {\n\n\tconst {query} = request;\n\tfindAllegianceAgainstId(query)\n\t\t.then(filterIsAutobot)\n\t\t.then(({isAutobot}) => {\n\n\t\t\tconsole.log('got back isAutobot', isAutobot);\n\t\t\tresponse.setHeader('Content-Type', 'application/json');\n\t\t\tresponse.send(JSON.stringify({isAutobot}));\n\n\t\t});\n\n}\n\nfunction sendModificationStatus(response, status) {\n\n\tresponse.send(status);\n\tconsole.log(status);\n\n}\n\nfunction requestModifiy(request, response) {\n\n\tconst {pushLatestEntryToUsers} = require('../socketio/send');\n\tconst {query} = request;\n\n\tcheckTransformerRelevance(query)\n\t\t.then(checkTransformerExistence)\n\t\t.then(addTransformer)\n\t\t.then(pushLatestEntryToUsers)\n\t\t.then(() => sendModificationStatus(response, `added transformer ${query.name} (${query.autobot ? 'autobot' : 'decepticon'}) to the database`))\n\t\t.catch((error) => sendModificationStatus(response, error));\n\n\t// http://localhost:3000/bin/modify/?name=Optimus Prime&isAutobot=true\n\t// http://localhost:3000/bin/modify/?name=Megatron&isAutobot=false\n\t// http://localhost:3000/bin/modify/?name=Bumblebee&isAutobot=true\n\t// http://localhost:3000/bin/modify/?name=Starscream&isAutobot=false\n\t// http://localhost:3000/bin/modify/?name=Ironhide&isAutobot=true\n\t// http://localhost:3000/bin/modify/?name=Soundwave&isAutobot=false\n\t// http://localhost:3000/bin/modify/?name=Ratchet&isAutobot=true\n\n}\n\napp.get('*', (request, response) => {\n\n\tconsole.log(`got \"(${request.path})\" request`);\n\n\tswitch (request.path) {\n\n\t\tcase '/':\n\t\t\treturn requestApp(request, response);\n\n\t\tcase '/bin/is-autobot/':\n\t\t\t// curl -i http://localhost:3000/bin/is-autobot/?_id=1234567890\n\t\t\treturn requestIsAutobot(request, response);\n\n\t\tcase '/bin/modify/':\n\t\t\t// curl -i http://localhost:3000/bin/modify/?name=starscream&isAutobot=false\n\t\t\treturn requestModifiy(request, response);\n\n\t\tdefault:\n\t\t\tresponse.status(404).send('Not found');\n\n\t}\n\n});\n\n// app.listen(3000);\n\nmodule.exports = app;\n\n\n\n// WEBPACK FOOTER //\n// ./express/initialise.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","const {mongoose} = require('./mongoose');\nconst transformerSchema = mongoose.Schema(\n\t{\n\t\tname: String,\n\t\tisAutobot: Boolean,\n\t},\n\t{\n\t\ttimestamps: true\n\t}\n);\nconst Transformer = mongoose.model('Transformer', transformerSchema);\n\nfunction checkTransformerRelevance({name, isAutobot}) {\n\n\tconsole.log(`checkTransformerRelevance, name = ${name} | isAutobot = ${isAutobot}`);\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tif (name && isAutobot) resolve({name, isAutobot});\n\t\telse reject('invalid data set please try again');\n\n\t});\n\n}\n\nfunction addTransformer(data) {\n\n\tconst transformer = new Transformer(data);\n\n\treturn transformer.save();\n\n}\n\nfunction checkTransformerExistence({name, isAutobot}) {\n\n\tconsole.log(`checkTransformerExistence, name = ${name} | isAutobot = ${isAutobot}`);\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tconsole.log('made new promise');\n\n\t\tTransformer\n\t\t\t.findOne({name})\n\t\t\t.then((data) => {\n\n\t\t\t\tconsole.log('got back existance data', data);\n\n\t\t\t\tif (data) reject('transformer alredady exists');\n\t\t\t\telse resolve({name, isAutobot});\n\n\t\t\t});\n\n\t});\n\n\n\n}\n\nfunction findAllTransformers() {\n\n\treturn Transformer.find();\n\n}\n\nfunction findLastTransformerEntry() {\n\n\treturn Transformer.findOne().sort('-updatedAt');\n\n}\n\nfunction findAllegianceAgainstId({_id}) {\n\n\treturn Transformer.findOne({_id});\n\n}\n\nfunction extractIsAutobot({isAutobot}) {\n\n\tconsole.log('extractIsAutobot', isAutobot);\n\n\treturn {isAutobot};\n\n}\n\nfunction filterIsAutobot(data) {\n\n\tconsole.log('filterIsAutobot', data);\n\n\t// {\"_id\":\"5853ba93b2fcae9d8e0d7ada\",\"name\":\"banana\",\"isAutobot\":true,\"__v\":0}\n\n\tconst isArray = Array.isArray(data);\n\n\tswitch (isArray) {\n\n\t\tcase true:\n\t\t\treturn data.map(extractIsAutobot);\n\n\t\tdefault:\n\t\t\treturn extractIsAutobot(data);\n\n\t}\n\n}\n\nfunction extractNameAndId({_id, name}) {\n\n\treturn {_id, name};\n\n}\n\nfunction filterNameAndId(data) {\n\n\t// {\"_id\":\"5853ba93b2fcae9d8e0d7ada\",\"name\":\"banana\",\"isAutobot\":true,\"__v\":0}\n\n\tconst isArray = Array.isArray(data);\n\n\tswitch (isArray) {\n\n\t\tcase true:\n\t\t\treturn data.map(extractNameAndId);\n\n\t\tdefault:\n\t\t\treturn extractNameAndId(data);\n\n\t}\n\n}\n\nmodule.exports = {\n\tcheckTransformerRelevance,\n\tcheckTransformerExistence,\n\taddTransformer,\n\tfindAllTransformers,\n\tfindLastTransformerEntry,\n\tfindAllegianceAgainstId,\n\tfilterIsAutobot,\n\tfilterNameAndId\n};\n\n\n\n// WEBPACK FOOTER //\n// ./mongo/transformer.js","const mongoose = require('mongoose');\nconst database = mongoose.connection;\n\nmongoose.Promise = global.Promise; // Use native ES6 promises NOT the built in out of date pollyfll.\n// mongoose.connect('mongodb://127.0.0.1:27017/database');\n// mongoose.connect('mongodb://127.0.0.1:27017');\n// mongoose.connect('mongodb://127.0.0.1:27017/db');\n\n// \"mongodb\" = the name of the Docker image name.\nmongoose.connect('mongodb://mongodb:27017');\n\n\n\n\n// 172.18.0.1:42942\n// mongoose.connect('mongodb://172.18.0.1:27017/database');\n// mongoose.connect('mongodb://172.17.0.2:27017/database');\n// mongoose.connect('mongodb://db_1:27017/database');\n// mongoose.connect('mongodb://mongo:27017/database');\n// mongoose.connect('mongodb://mongo:27017'); // 'mongodb://db_1:27017/test' //  'mongodb://localhost/test'\n\ndatabase.on('error', () => console.log('database (mongoose) connection error'));\ndatabase.once('open', () => console.log('database (mongoose) connected'));\n\nmodule.exports = {\n\tmongoose,\n\tdatabase\n};\n\n\n\n// WEBPACK FOOTER //\n// ./mongo/mongoose.js","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 5\n// module chunks = 0","module.exports = (state = []) => {\n\n\tconst doctype = '<!doctype html>';\n\tconst html = (\n\t\t`<html lang=\"en\">\n\n\t\t\t<head>\n\n\t\t\t\t<meta charset=\"utf-8\">\n\t\t\t\t<meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n\t\t\t\t<title>Transformers</title>\n\t\t\t\t<meta name=\"description\" content=\"\">\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n\t\t\t\t<link rel=\"stylesheet\" href=\"/client.css\">\n\n\t\t\t\t<script>\n\t\t\t\t\twindow.__REDUX_STATE__ = {\n\t\t\t\t\t\ttransformers: ${JSON.stringify(state)}\n\t\t\t\t\t};\n\t\t\t\t</script>\n\n\t\t\t</head>\n\n\t\t\t<body>\n\n\t\t\t\t<div id=\"app\"></div>\n\t\t\t\t<script src=\"/client.js\"></script>\n\n\t\t\t</body>\n\n\t\t</html>`\n\t);\n\n\t// Forcing the doctype to butt right up as the first character on the first\n\t// line to avoid a syntax error on the client.\n\treturn (`${doctype}\\n${html}`);\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./universal/html-boilerplate.js","const express = require('../express/initialise');\nconst http = require('http').Server(express);\nconst socket = require('socket.io')(http);\nconst port = 3000;\nconst {findLastTransformerEntry, filterNameAndId} = require('../mongo/transformer');\n\nhttp.listen(port, () => console.log(`http server listening on port ${port}`));\n\nfunction pushLatestEntryToUsers() {\n\n\treturn findLastTransformerEntry()\n\t\t.then((data) => {\n\n\t\t\tconst filteredData = filterNameAndId(data);\n\t\t\tconsole.log('sending data to the client', filteredData);\n\t\t\tsocket.emit('newTransformerEntry', filteredData);\n\n\t\t});\n\n}\n\nmodule.exports = {\n\tpushLatestEntryToUsers\n};\n\n\n\n// WEBPACK FOOTER //\n// ./socketio/send.js","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 9\n// module chunks = 0","require('./mongoose');\n\n\n\n// WEBPACK FOOTER //\n// ./mongo/initialise.js"],"sourceRoot":""}